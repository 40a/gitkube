/*
Copyright 2018 Hasura.io

*/

// This file was automatically generated by informer-gen

package v1alpha1

import (
	gitkube_sh_v1alpha1 "github.com/hasura/gitkube/pkg/apis/gitkube.sh/v1alpha1"
	versioned "github.com/hasura/gitkube/pkg/client/clientset/versioned"
	internalinterfaces "github.com/hasura/gitkube/pkg/client/informers/externalversions/internalinterfaces"
	v1alpha1 "github.com/hasura/gitkube/pkg/client/listers/gitkube/v1alpha1"
	v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
	watch "k8s.io/apimachinery/pkg/watch"
	cache "k8s.io/client-go/tools/cache"
	time "time"
)

// RemoteInformer provides access to a shared informer and lister for
// Remotes.
type RemoteInformer interface {
	Informer() cache.SharedIndexInformer
	Lister() v1alpha1.RemoteLister
}

type remoteInformer struct {
	factory internalinterfaces.SharedInformerFactory
}

// NewRemoteInformer constructs a new informer for Remote type.
// Always prefer using an informer factory to get a shared informer instead of getting an independent
// one. This reduces memory footprint and number of connections to the server.
func NewRemoteInformer(client versioned.Interface, namespace string, resyncPeriod time.Duration, indexers cache.Indexers) cache.SharedIndexInformer {
	return cache.NewSharedIndexInformer(
		&cache.ListWatch{
			ListFunc: func(options v1.ListOptions) (runtime.Object, error) {
				return client.GitkubeV1alpha1().Remotes(namespace).List(options)
			},
			WatchFunc: func(options v1.ListOptions) (watch.Interface, error) {
				return client.GitkubeV1alpha1().Remotes(namespace).Watch(options)
			},
		},
		&gitkube_sh_v1alpha1.Remote{},
		resyncPeriod,
		indexers,
	)
}

func defaultRemoteInformer(client versioned.Interface, resyncPeriod time.Duration) cache.SharedIndexInformer {
	return NewRemoteInformer(client, v1.NamespaceAll, resyncPeriod, cache.Indexers{cache.NamespaceIndex: cache.MetaNamespaceIndexFunc})
}

func (f *remoteInformer) Informer() cache.SharedIndexInformer {
	return f.factory.InformerFor(&gitkube_sh_v1alpha1.Remote{}, defaultRemoteInformer)
}

func (f *remoteInformer) Lister() v1alpha1.RemoteLister {
	return v1alpha1.NewRemoteLister(f.Informer().GetIndexer())
}
